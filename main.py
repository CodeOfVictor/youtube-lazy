import os
import re
import subprocess

# Downloads YouTube subtitles in .vtt format (hiding yt-dlp logs)
def download_subtitles(video_url, lang="es"):
    command = [
        "yt-dlp",
        "--skip-download",
        "--write-auto-sub",
        "--sub-lang", lang,
        "--sub-format", "vtt",
        "-o", "subtitles",
        video_url
    ]
    # Run yt-dlp without printing logs to the console
    subprocess.run(command, check=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

# Cleans a .vtt file and returns only the text without duplicates or unnecessary tags
def clean_subtitles(file_path):
    with open(file_path, "r", encoding="utf-8") as f:
        content = f.readlines()

    clean_lines = []
    seen_lines = set()  # To remove duplicate lines

    for line in content:
        line = line.strip()  # Remove extra spaces

        # Filter out unnecessary text and headers
        if not line or "align:start" in line or "position:" in line or "Kind: captions" in line:
            continue  # Ignore irrelevant lines
        if line.startswith("WEBVTT") or line.startswith("Language:"):
            continue  # Ignore WEBVTT header and language info

        # Remove HTML tags and timestamps
        line = re.sub(r'<[^>]+>', '', line)  # Remove HTML tags
        line = re.sub(r'\d{2}:\d{2}:\d{2}\.\d{3} --> \d{2}:\d{2}:\d{2}\.\d{3}', '', line)  # Remove timestamps

        # Avoid duplicate lines
        if line not in seen_lines:
            seen_lines.add(line)
            clean_lines.append(line)

    return "\n".join(clean_lines)  # Return cleaned subtitles

# Downloads and cleans subtitles, then prints them to the console
def get_subtitles(video_url):
    try:
        download_subtitles(video_url)
        subtitles_file = "subtitles.es.vtt"  # File generated by yt-dlp
        if not os.path.exists(subtitles_file):
            print("‚ùå No subtitles found.")
            return

        subtitles = clean_subtitles(subtitles_file)  # Clean subtitles
        os.remove(subtitles_file)  # Delete temporary file

        print("\n--- EXTRACTED SUBTITLES ---\n")
        print(subtitles)

    except Exception as e:
        print(f"‚ùå Error: {e}")

# --- EXECUTION ---
if __name__ == "__main__":
    video_url = input("üé• Enter YouTube video URL: ")
    get_subtitles(video_url)
